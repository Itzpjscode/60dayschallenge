// { Driver Code Starts
//Initial template for C++

#include<bits/stdc++.h>
using namespace std;
void rotate (vector<vector<int> >& matrix);


 // } Driver Code Ends
//User function template for C++

/* matrix : given input matrix, you are require 
 to change it in place without using extra space */
void rotate(vector<vector<int> >& matrix)
{
    // Your code goes here
   // vector<vector<int>> temp(matrix); -- another way of coping array.
    
    int n=matrix.size();
    int temp[n][n];
    for(int i=0;i<n;i++)
        for(int j=0; j<n;j++)
            temp[i][j] = matrix[i][j];
            
    for(int i=0;i<n;i++)
        for(int j=0; j<n;j++)
            matrix[i][j] = temp[j][n-i-1];

    }
    
    
    
    
    
    
    
    
    
    
    
    
    /*int n=matrix.size()-1,N=matrix.size();
    
    for(int i=0;i<N;i++)
    {
     for(int j=0;j<N;j++)
     {
         int temp1=matrix[i][j];
         int temp2=matrix[i][n];
         int temp3=matrix[n][i];
         int temp4=matrix[n][n];
         matrix[i][j]=temp2;
         matrix[i][n]=temp4;
         matrix[n][i]=temp1;
         matrix[n][n]=temp3;
         n--;
         
     }
    } */



// { Driver Code Starts.

int main()
{
    int t;
    cin>>t; 
    while(t--)
    {
        int n;
        cin>>n; 
        vector<vector<int> > matrix(n);
        for(int i=0; i<n; i++)
        {
            matrix[i].resize(n);
            for(int j=0; j<n; j++)
                cin>>matrix[i][j]; 
        }
        rotate(matrix);
        for (int i = 0; i < n; ++i)
        {
            for(int j=0; j<n; j++)
                cout<<matrix[i][j]<<" ";
            cout<<"\n";
        }
    }
    return 0;
}

  // } Driver Code Ends